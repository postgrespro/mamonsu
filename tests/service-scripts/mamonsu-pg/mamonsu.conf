[agent]
host = 0.0.0.0
port = 10050

[postgres]
host = localhost
port = 5432
user = postgres
password = postgres
database = mamonsu_test_db
application_name = mamonsu
query_timeout = 10

[zabbix]
enabled = true
address = zabbix
port = 10051

; #########  General parameters sections  ############
;
; # enable or disable collection of system metrics.
;
[system]
enabled = True
;
; # control the queue size of the data to be sent to the Zabbix server
;
[sender]
queue = 2048
;
; # specify the location of mamonsu and whether it is allowed to access metrics from the command line
;
; ; [agent]
; ; enabled = True
; ; host = 127.0.0.1
; ; port = 10052
;
; # specify custom plugins to be added for metrics collection

[plugins]
enabled = False
directory = /etc/mamonsu/plugins

; #########  Individual Plugin Sections  ############
;
; # to disable any plugin set the enabled option to False.
; # modify collection interval for each plugin in the interval field.
; # set customer parameters for some plugins in the individual section.
; # below listed all available parameters for each plugin to modify.

[archivecommand]
interval = 60

; # Besides standard autovacuum workers count, mamonsu also counts autovacuum utilization.
; # But this metric is instantaneous, so recommended to run this plugin frequently
; # to get a complete picture of autovacuum utilization.
[autovacuum]
interval = 30

[bgwriter]
interval = 60

[cfs]
force_enable = False
interval = 60

[checkpoint]
interval = 300

[connections]
interval = 60

[databases]
interval = 300

[pghealth]
interval = 60

[instance]
interval = 60
;
; # This plugin allows detects possible memory leaks while working with PostgreSQL using /proc/pid/status and /proc/pid/statm
; # We use RES and SHR difference to calculate approximate volume of private anonymous backend memory.
; # If it exceeds private_anon_mem_threshold then that pid will be added to a message. An example is presented below
; # statm -  'pid: {pid},  RES {RES} - SHR {SHR} more then {private_anon_mem_threshold}\n'
; # Since Linux 4.5 RssAnon, RssFile and RssShmem have been added.
; # They allows to distinguish types of memory such as private anonymous, file-backed, and shared anonymous memory.
; # We are interested in RssAnon. If its value exceeds private_anon_mem_threshold then that pid will also be added to a message.
; # By default this plugin disabled. To enable this plugin - set bellow "enabled = False"
; # #interval - (onitoring frequency in seconds. 60 seconds by default
; # private_anon_mem_threshold - memory volume threshold after which we need an investigation about memory leak. 1GB by default.
; # Possible values MB, GB, TB. For example 1GB
[memoryleakdiagnostic]
enabled = True
interval = 15
private_anon_mem_threshold = 1GB
;
[oldest]
interval = 60

[pgbuffercache]
interval = 60

[pglocks]
interval = 60

; # Get age (in seconds) of the oldest running prepared transaction and number of all prepared transactions for two-phase commit.
; # https://www.postgresql.org/docs/current/sql-prepare-transaction.html
; # https://www.postgresql.org/docs/12/view-pg-prepared-xacts.html
; # max_prepared_transaction_time - age of prepared transaction in seconds.
; # If pgsql.prepared.oldest exceeds max_prepared_transaction_time the trigger fires.
[preparedtransaction]
interval = 60
;
; # Get size of relations defined in this section
; # Relations - comma separated list of objects - tables and endexes (database_name.schema.relation) used to calculate relations size.
; # Example:
; # relations=postgres.pg_catalog.pg_class,postgres.pg_catalog.pg_user
; # If the relation is blocked by some process such as vacuum full or create index, the result will be -1
; # by default this plugin disabled. To enable this plugin - set bellow "enabled = False" and define a list of relations.
[relationssize]
enabled = True
relations=postgres.pg_catalog.pg_class,mamonsu_test_db.mamonsu.config
interval = 15

[replication]
interval = 60

[statstatements]
interval = 60

[waitsampling]
interval = 60

[wal]
interval = 60

[disksizes]
interval = 60

[diskstats]
interval = 60

[la]
interval = 60

[memory]
interval = 60

[net]
interval = 60

[openfiles]
interval = 60
;
; # Get size of backup catalogs stroring all WAL and backup files using pg_probackup
; # (https://github.com/postgrespro/pg_probackup)
; # Trigger fires if some backup has bad status e.g. (ERROR,CORRUPT,ORPHAN).
[pgprobackup]
enabled = False
interval = 300
backup_dirs = /backup_dir1,/backup_dir2
pg_probackup_path = /usr/bin/pg_probackup-11
;
[procstat]
interval = 60

[systemuptime]
interval = 60

[agentapi]
interval = 60

[logsender]
interval = 2

[zbxsender]
interval = 10
